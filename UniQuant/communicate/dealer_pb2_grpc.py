# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import dealer_pb2 as dealer__pb2


class GameStub(object):
  """The greeting service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GameStream = channel.stream_stream(
        '/Dealer.Game/GameStream',
        request_serializer=dealer__pb2.DealerRequest.SerializeToString,
        response_deserializer=dealer__pb2.DealerRequest.FromString,
        )


class GameServicer(object):
  """The greeting service definition.
  """

  def GameStream(self, request_iterator, context):
    """Sends a greeting
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GameServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GameStream': grpc.stream_stream_rpc_method_handler(
          servicer.GameStream,
          request_deserializer=dealer__pb2.DealerRequest.FromString,
          response_serializer=dealer__pb2.DealerRequest.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Dealer.Game', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
