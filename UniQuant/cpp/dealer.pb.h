// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dealer.proto

#ifndef PROTOBUF_dealer_2eproto__INCLUDED
#define PROTOBUF_dealer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace Dealer {
class DealerRequest;
class DealerRequestDefaultTypeInternal;
extern DealerRequestDefaultTypeInternal _DealerRequest_default_instance_;
}  // namespace Dealer

namespace Dealer {

namespace protobuf_dealer_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_dealer_2eproto

// ===================================================================

class DealerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Dealer.DealerRequest) */ {
 public:
  DealerRequest();
  virtual ~DealerRequest();

  DealerRequest(const DealerRequest& from);

  inline DealerRequest& operator=(const DealerRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DealerRequest& default_instance();

  static inline const DealerRequest* internal_default_instance() {
    return reinterpret_cast<const DealerRequest*>(
               &_DealerRequest_default_instance_);
  }

  void Swap(DealerRequest* other);

  // implements Message ----------------------------------------------

  inline DealerRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DealerRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DealerRequest& from);
  void MergeFrom(const DealerRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DealerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 userMoney = 17;
  int usermoney_size() const;
  void clear_usermoney();
  static const int kUserMoneyFieldNumber = 17;
  ::google::protobuf::int32 usermoney(int index) const;
  void set_usermoney(int index, ::google::protobuf::int32 value);
  void add_usermoney(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      usermoney() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_usermoney();

  // string user = 1;
  void clear_user();
  static const int kUserFieldNumber = 1;
  const ::std::string& user() const;
  void set_user(const ::std::string& value);
  #if LANG_CXX11
  void set_user(::std::string&& value);
  #endif
  void set_user(const char* value);
  void set_user(const char* value, size_t size);
  ::std::string* mutable_user();
  ::std::string* release_user();
  void set_allocated_user(::std::string* user);

  // string token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string identity = 3;
  void clear_identity();
  static const int kIdentityFieldNumber = 3;
  const ::std::string& identity() const;
  void set_identity(const ::std::string& value);
  #if LANG_CXX11
  void set_identity(::std::string&& value);
  #endif
  void set_identity(const char* value);
  void set_identity(const char* value, size_t size);
  ::std::string* mutable_identity();
  ::std::string* release_identity();
  void set_allocated_identity(::std::string* identity);

  // string command = 4;
  void clear_command();
  static const int kCommandFieldNumber = 4;
  const ::std::string& command() const;
  void set_command(const ::std::string& value);
  #if LANG_CXX11
  void set_command(::std::string&& value);
  #endif
  void set_command(const char* value);
  void set_command(const char* value, size_t size);
  ::std::string* mutable_command();
  ::std::string* release_command();
  void set_allocated_command(::std::string* command);

  // string version = 15;
  void clear_version();
  static const int kVersionFieldNumber = 15;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // string extra = 18;
  void clear_extra();
  static const int kExtraFieldNumber = 18;
  const ::std::string& extra() const;
  void set_extra(const ::std::string& value);
  #if LANG_CXX11
  void set_extra(::std::string&& value);
  #endif
  void set_extra(const char* value);
  void set_extra(const char* value, size_t size);
  ::std::string* mutable_extra();
  ::std::string* release_extra();
  void set_allocated_extra(::std::string* extra);

  // int32 giveup = 5;
  void clear_giveup();
  static const int kGiveupFieldNumber = 5;
  ::google::protobuf::int32 giveup() const;
  void set_giveup(::google::protobuf::int32 value);

  // int32 allin = 6;
  void clear_allin();
  static const int kAllinFieldNumber = 6;
  ::google::protobuf::int32 allin() const;
  void set_allin(::google::protobuf::int32 value);

  // int32 check = 7;
  void clear_check();
  static const int kCheckFieldNumber = 7;
  ::google::protobuf::int32 check() const;
  void set_check(::google::protobuf::int32 value);

  // int32 callbet = 8;
  void clear_callbet();
  static const int kCallbetFieldNumber = 8;
  ::google::protobuf::int32 callbet() const;
  void set_callbet(::google::protobuf::int32 value);

  // int32 raisebet = 9;
  void clear_raisebet();
  static const int kRaisebetFieldNumber = 9;
  ::google::protobuf::int32 raisebet() const;
  void set_raisebet(::google::protobuf::int32 value);

  // int32 amount = 10;
  void clear_amount();
  static const int kAmountFieldNumber = 10;
  ::google::protobuf::int32 amount() const;
  void set_amount(::google::protobuf::int32 value);

  // int32 pos = 11;
  void clear_pos();
  static const int kPosFieldNumber = 11;
  ::google::protobuf::int32 pos() const;
  void set_pos(::google::protobuf::int32 value);

  // int32 type = 12;
  void clear_type();
  static const int kTypeFieldNumber = 12;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 num = 13;
  void clear_num();
  static const int kNumFieldNumber = 13;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // int32 status = 14;
  void clear_status();
  static const int kStatusFieldNumber = 14;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // int32 actionNum = 16;
  void clear_actionnum();
  static const int kActionNumFieldNumber = 16;
  ::google::protobuf::int32 actionnum() const;
  void set_actionnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Dealer.DealerRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > usermoney_;
  mutable int _usermoney_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr user_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr identity_;
  ::google::protobuf::internal::ArenaStringPtr command_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr extra_;
  ::google::protobuf::int32 giveup_;
  ::google::protobuf::int32 allin_;
  ::google::protobuf::int32 check_;
  ::google::protobuf::int32 callbet_;
  ::google::protobuf::int32 raisebet_;
  ::google::protobuf::int32 amount_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 actionnum_;
  mutable int _cached_size_;
  friend struct protobuf_dealer_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DealerRequest

// string user = 1;
inline void DealerRequest::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DealerRequest::user() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.user)
  return user_.GetNoArena();
}
inline void DealerRequest::set_user(const ::std::string& value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.user)
}
#if LANG_CXX11
inline void DealerRequest::set_user(::std::string&& value) {
  
  user_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Dealer.DealerRequest.user)
}
#endif
inline void DealerRequest::set_user(const char* value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Dealer.DealerRequest.user)
}
inline void DealerRequest::set_user(const char* value, size_t size) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Dealer.DealerRequest.user)
}
inline ::std::string* DealerRequest::mutable_user() {
  
  // @@protoc_insertion_point(field_mutable:Dealer.DealerRequest.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DealerRequest::release_user() {
  // @@protoc_insertion_point(field_release:Dealer.DealerRequest.user)
  
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DealerRequest::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    
  } else {
    
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:Dealer.DealerRequest.user)
}

// string token = 2;
inline void DealerRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DealerRequest::token() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.token)
  return token_.GetNoArena();
}
inline void DealerRequest::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.token)
}
#if LANG_CXX11
inline void DealerRequest::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Dealer.DealerRequest.token)
}
#endif
inline void DealerRequest::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Dealer.DealerRequest.token)
}
inline void DealerRequest::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Dealer.DealerRequest.token)
}
inline ::std::string* DealerRequest::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:Dealer.DealerRequest.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DealerRequest::release_token() {
  // @@protoc_insertion_point(field_release:Dealer.DealerRequest.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DealerRequest::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:Dealer.DealerRequest.token)
}

// string identity = 3;
inline void DealerRequest::clear_identity() {
  identity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DealerRequest::identity() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.identity)
  return identity_.GetNoArena();
}
inline void DealerRequest::set_identity(const ::std::string& value) {
  
  identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.identity)
}
#if LANG_CXX11
inline void DealerRequest::set_identity(::std::string&& value) {
  
  identity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Dealer.DealerRequest.identity)
}
#endif
inline void DealerRequest::set_identity(const char* value) {
  
  identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Dealer.DealerRequest.identity)
}
inline void DealerRequest::set_identity(const char* value, size_t size) {
  
  identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Dealer.DealerRequest.identity)
}
inline ::std::string* DealerRequest::mutable_identity() {
  
  // @@protoc_insertion_point(field_mutable:Dealer.DealerRequest.identity)
  return identity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DealerRequest::release_identity() {
  // @@protoc_insertion_point(field_release:Dealer.DealerRequest.identity)
  
  return identity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DealerRequest::set_allocated_identity(::std::string* identity) {
  if (identity != NULL) {
    
  } else {
    
  }
  identity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identity);
  // @@protoc_insertion_point(field_set_allocated:Dealer.DealerRequest.identity)
}

// string command = 4;
inline void DealerRequest::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DealerRequest::command() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.command)
  return command_.GetNoArena();
}
inline void DealerRequest::set_command(const ::std::string& value) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.command)
}
#if LANG_CXX11
inline void DealerRequest::set_command(::std::string&& value) {
  
  command_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Dealer.DealerRequest.command)
}
#endif
inline void DealerRequest::set_command(const char* value) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Dealer.DealerRequest.command)
}
inline void DealerRequest::set_command(const char* value, size_t size) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Dealer.DealerRequest.command)
}
inline ::std::string* DealerRequest::mutable_command() {
  
  // @@protoc_insertion_point(field_mutable:Dealer.DealerRequest.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DealerRequest::release_command() {
  // @@protoc_insertion_point(field_release:Dealer.DealerRequest.command)
  
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DealerRequest::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    
  } else {
    
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:Dealer.DealerRequest.command)
}

// int32 giveup = 5;
inline void DealerRequest::clear_giveup() {
  giveup_ = 0;
}
inline ::google::protobuf::int32 DealerRequest::giveup() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.giveup)
  return giveup_;
}
inline void DealerRequest::set_giveup(::google::protobuf::int32 value) {
  
  giveup_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.giveup)
}

// int32 allin = 6;
inline void DealerRequest::clear_allin() {
  allin_ = 0;
}
inline ::google::protobuf::int32 DealerRequest::allin() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.allin)
  return allin_;
}
inline void DealerRequest::set_allin(::google::protobuf::int32 value) {
  
  allin_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.allin)
}

// int32 check = 7;
inline void DealerRequest::clear_check() {
  check_ = 0;
}
inline ::google::protobuf::int32 DealerRequest::check() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.check)
  return check_;
}
inline void DealerRequest::set_check(::google::protobuf::int32 value) {
  
  check_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.check)
}

// int32 callbet = 8;
inline void DealerRequest::clear_callbet() {
  callbet_ = 0;
}
inline ::google::protobuf::int32 DealerRequest::callbet() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.callbet)
  return callbet_;
}
inline void DealerRequest::set_callbet(::google::protobuf::int32 value) {
  
  callbet_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.callbet)
}

// int32 raisebet = 9;
inline void DealerRequest::clear_raisebet() {
  raisebet_ = 0;
}
inline ::google::protobuf::int32 DealerRequest::raisebet() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.raisebet)
  return raisebet_;
}
inline void DealerRequest::set_raisebet(::google::protobuf::int32 value) {
  
  raisebet_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.raisebet)
}

// int32 amount = 10;
inline void DealerRequest::clear_amount() {
  amount_ = 0;
}
inline ::google::protobuf::int32 DealerRequest::amount() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.amount)
  return amount_;
}
inline void DealerRequest::set_amount(::google::protobuf::int32 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.amount)
}

// int32 pos = 11;
inline void DealerRequest::clear_pos() {
  pos_ = 0;
}
inline ::google::protobuf::int32 DealerRequest::pos() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.pos)
  return pos_;
}
inline void DealerRequest::set_pos(::google::protobuf::int32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.pos)
}

// int32 type = 12;
inline void DealerRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 DealerRequest::type() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.type)
  return type_;
}
inline void DealerRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.type)
}

// int32 num = 13;
inline void DealerRequest::clear_num() {
  num_ = 0;
}
inline ::google::protobuf::int32 DealerRequest::num() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.num)
  return num_;
}
inline void DealerRequest::set_num(::google::protobuf::int32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.num)
}

// int32 status = 14;
inline void DealerRequest::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 DealerRequest::status() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.status)
  return status_;
}
inline void DealerRequest::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.status)
}

// string version = 15;
inline void DealerRequest::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DealerRequest::version() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.version)
  return version_.GetNoArena();
}
inline void DealerRequest::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.version)
}
#if LANG_CXX11
inline void DealerRequest::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Dealer.DealerRequest.version)
}
#endif
inline void DealerRequest::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Dealer.DealerRequest.version)
}
inline void DealerRequest::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Dealer.DealerRequest.version)
}
inline ::std::string* DealerRequest::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:Dealer.DealerRequest.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DealerRequest::release_version() {
  // @@protoc_insertion_point(field_release:Dealer.DealerRequest.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DealerRequest::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:Dealer.DealerRequest.version)
}

// int32 actionNum = 16;
inline void DealerRequest::clear_actionnum() {
  actionnum_ = 0;
}
inline ::google::protobuf::int32 DealerRequest::actionnum() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.actionNum)
  return actionnum_;
}
inline void DealerRequest::set_actionnum(::google::protobuf::int32 value) {
  
  actionnum_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.actionNum)
}

// repeated int32 userMoney = 17;
inline int DealerRequest::usermoney_size() const {
  return usermoney_.size();
}
inline void DealerRequest::clear_usermoney() {
  usermoney_.Clear();
}
inline ::google::protobuf::int32 DealerRequest::usermoney(int index) const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.userMoney)
  return usermoney_.Get(index);
}
inline void DealerRequest::set_usermoney(int index, ::google::protobuf::int32 value) {
  usermoney_.Set(index, value);
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.userMoney)
}
inline void DealerRequest::add_usermoney(::google::protobuf::int32 value) {
  usermoney_.Add(value);
  // @@protoc_insertion_point(field_add:Dealer.DealerRequest.userMoney)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DealerRequest::usermoney() const {
  // @@protoc_insertion_point(field_list:Dealer.DealerRequest.userMoney)
  return usermoney_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DealerRequest::mutable_usermoney() {
  // @@protoc_insertion_point(field_mutable_list:Dealer.DealerRequest.userMoney)
  return &usermoney_;
}

// string extra = 18;
inline void DealerRequest::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DealerRequest::extra() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.extra)
  return extra_.GetNoArena();
}
inline void DealerRequest::set_extra(const ::std::string& value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.extra)
}
#if LANG_CXX11
inline void DealerRequest::set_extra(::std::string&& value) {
  
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Dealer.DealerRequest.extra)
}
#endif
inline void DealerRequest::set_extra(const char* value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Dealer.DealerRequest.extra)
}
inline void DealerRequest::set_extra(const char* value, size_t size) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Dealer.DealerRequest.extra)
}
inline ::std::string* DealerRequest::mutable_extra() {
  
  // @@protoc_insertion_point(field_mutable:Dealer.DealerRequest.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DealerRequest::release_extra() {
  // @@protoc_insertion_point(field_release:Dealer.DealerRequest.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DealerRequest::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:Dealer.DealerRequest.extra)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace Dealer

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dealer_2eproto__INCLUDED
