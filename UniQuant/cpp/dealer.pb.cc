// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dealer.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dealer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Dealer {
class DealerRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DealerRequest> {
} _DealerRequest_default_instance_;

namespace protobuf_dealer_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealerRequest, user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealerRequest, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealerRequest, identity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealerRequest, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealerRequest, giveup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealerRequest, allin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealerRequest, check_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealerRequest, callbet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealerRequest, raisebet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealerRequest, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealerRequest, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealerRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealerRequest, num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealerRequest, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealerRequest, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealerRequest, actionnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealerRequest, usermoney_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealerRequest, extra_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(DealerRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_DealerRequest_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "dealer.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _DealerRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _DealerRequest_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\014dealer.proto\022\006Dealer\"\256\002\n\rDealerRequest"
      "\022\014\n\004user\030\001 \001(\t\022\r\n\005token\030\002 \001(\t\022\020\n\010identit"
      "y\030\003 \001(\t\022\017\n\007command\030\004 \001(\t\022\016\n\006giveup\030\005 \001(\005"
      "\022\r\n\005allin\030\006 \001(\005\022\r\n\005check\030\007 \001(\005\022\017\n\007callbe"
      "t\030\010 \001(\005\022\020\n\010raisebet\030\t \001(\005\022\016\n\006amount\030\n \001("
      "\005\022\013\n\003pos\030\013 \001(\005\022\014\n\004type\030\014 \001(\005\022\013\n\003num\030\r \001("
      "\005\022\016\n\006status\030\016 \001(\005\022\017\n\007version\030\017 \001(\t\022\021\n\tac"
      "tionNum\030\020 \001(\005\022\021\n\tuserMoney\030\021 \003(\005\022\r\n\005extr"
      "a\030\022 \001(\t2H\n\004Game\022@\n\nGameStream\022\025.Dealer.D"
      "ealerRequest\032\025.Dealer.DealerRequest\"\000(\0010"
      "\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 409);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dealer.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_dealer_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DealerRequest::kUserFieldNumber;
const int DealerRequest::kTokenFieldNumber;
const int DealerRequest::kIdentityFieldNumber;
const int DealerRequest::kCommandFieldNumber;
const int DealerRequest::kGiveupFieldNumber;
const int DealerRequest::kAllinFieldNumber;
const int DealerRequest::kCheckFieldNumber;
const int DealerRequest::kCallbetFieldNumber;
const int DealerRequest::kRaisebetFieldNumber;
const int DealerRequest::kAmountFieldNumber;
const int DealerRequest::kPosFieldNumber;
const int DealerRequest::kTypeFieldNumber;
const int DealerRequest::kNumFieldNumber;
const int DealerRequest::kStatusFieldNumber;
const int DealerRequest::kVersionFieldNumber;
const int DealerRequest::kActionNumFieldNumber;
const int DealerRequest::kUserMoneyFieldNumber;
const int DealerRequest::kExtraFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DealerRequest::DealerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dealer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Dealer.DealerRequest)
}
DealerRequest::DealerRequest(const DealerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      usermoney_(from.usermoney_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user().size() > 0) {
    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  identity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.identity().size() > 0) {
    identity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identity_);
  }
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.command().size() > 0) {
    command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extra().size() > 0) {
    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  ::memcpy(&giveup_, &from.giveup_,
    reinterpret_cast<char*>(&actionnum_) -
    reinterpret_cast<char*>(&giveup_) + sizeof(actionnum_));
  // @@protoc_insertion_point(copy_constructor:Dealer.DealerRequest)
}

void DealerRequest::SharedCtor() {
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&giveup_, 0, reinterpret_cast<char*>(&actionnum_) -
    reinterpret_cast<char*>(&giveup_) + sizeof(actionnum_));
  _cached_size_ = 0;
}

DealerRequest::~DealerRequest() {
  // @@protoc_insertion_point(destructor:Dealer.DealerRequest)
  SharedDtor();
}

void DealerRequest::SharedDtor() {
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DealerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DealerRequest::descriptor() {
  protobuf_dealer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dealer_2eproto::file_level_metadata[0].descriptor;
}

const DealerRequest& DealerRequest::default_instance() {
  protobuf_dealer_2eproto::InitDefaults();
  return *internal_default_instance();
}

DealerRequest* DealerRequest::New(::google::protobuf::Arena* arena) const {
  DealerRequest* n = new DealerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DealerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Dealer.DealerRequest)
  usermoney_.Clear();
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&giveup_, 0, reinterpret_cast<char*>(&actionnum_) -
    reinterpret_cast<char*>(&giveup_) + sizeof(actionnum_));
}

bool DealerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Dealer.DealerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user().data(), this->user().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Dealer.DealerRequest.user"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Dealer.DealerRequest.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string identity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identity()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->identity().data(), this->identity().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Dealer.DealerRequest.identity"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string command = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->command().data(), this->command().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Dealer.DealerRequest.command"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 giveup = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &giveup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 allin = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &allin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 check = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &check_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 callbet = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &callbet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 raisebet = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &raisebet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 amount = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pos = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 status = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Dealer.DealerRequest.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 actionNum = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actionnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 userMoney = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_usermoney())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(136u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 138u, input, this->mutable_usermoney())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extra = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extra()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extra().data(), this->extra().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Dealer.DealerRequest.extra"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Dealer.DealerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Dealer.DealerRequest)
  return false;
#undef DO_
}

void DealerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Dealer.DealerRequest)
  // string user = 1;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), this->user().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Dealer.DealerRequest.user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user(), output);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Dealer.DealerRequest.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token(), output);
  }

  // string identity = 3;
  if (this->identity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identity().data(), this->identity().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Dealer.DealerRequest.identity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->identity(), output);
  }

  // string command = 4;
  if (this->command().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command().data(), this->command().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Dealer.DealerRequest.command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->command(), output);
  }

  // int32 giveup = 5;
  if (this->giveup() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->giveup(), output);
  }

  // int32 allin = 6;
  if (this->allin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->allin(), output);
  }

  // int32 check = 7;
  if (this->check() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->check(), output);
  }

  // int32 callbet = 8;
  if (this->callbet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->callbet(), output);
  }

  // int32 raisebet = 9;
  if (this->raisebet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->raisebet(), output);
  }

  // int32 amount = 10;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->amount(), output);
  }

  // int32 pos = 11;
  if (this->pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->pos(), output);
  }

  // int32 type = 12;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->type(), output);
  }

  // int32 num = 13;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->num(), output);
  }

  // int32 status = 14;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->status(), output);
  }

  // string version = 15;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Dealer.DealerRequest.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->version(), output);
  }

  // int32 actionNum = 16;
  if (this->actionnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->actionnum(), output);
  }

  // repeated int32 userMoney = 17;
  if (this->usermoney_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(17, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_usermoney_cached_byte_size_);
  }
  for (int i = 0, n = this->usermoney_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->usermoney(i), output);
  }

  // string extra = 18;
  if (this->extra().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extra().data(), this->extra().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Dealer.DealerRequest.extra");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->extra(), output);
  }

  // @@protoc_insertion_point(serialize_end:Dealer.DealerRequest)
}

::google::protobuf::uint8* DealerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Dealer.DealerRequest)
  // string user = 1;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), this->user().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Dealer.DealerRequest.user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user(), target);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Dealer.DealerRequest.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token(), target);
  }

  // string identity = 3;
  if (this->identity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identity().data(), this->identity().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Dealer.DealerRequest.identity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->identity(), target);
  }

  // string command = 4;
  if (this->command().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command().data(), this->command().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Dealer.DealerRequest.command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->command(), target);
  }

  // int32 giveup = 5;
  if (this->giveup() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->giveup(), target);
  }

  // int32 allin = 6;
  if (this->allin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->allin(), target);
  }

  // int32 check = 7;
  if (this->check() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->check(), target);
  }

  // int32 callbet = 8;
  if (this->callbet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->callbet(), target);
  }

  // int32 raisebet = 9;
  if (this->raisebet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->raisebet(), target);
  }

  // int32 amount = 10;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->amount(), target);
  }

  // int32 pos = 11;
  if (this->pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->pos(), target);
  }

  // int32 type = 12;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->type(), target);
  }

  // int32 num = 13;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->num(), target);
  }

  // int32 status = 14;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->status(), target);
  }

  // string version = 15;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Dealer.DealerRequest.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->version(), target);
  }

  // int32 actionNum = 16;
  if (this->actionnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->actionnum(), target);
  }

  // repeated int32 userMoney = 17;
  if (this->usermoney_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      17,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _usermoney_cached_byte_size_, target);
  }
  for (int i = 0, n = this->usermoney_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->usermoney(i), target);
  }

  // string extra = 18;
  if (this->extra().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extra().data(), this->extra().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Dealer.DealerRequest.extra");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->extra(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Dealer.DealerRequest)
  return target;
}

size_t DealerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Dealer.DealerRequest)
  size_t total_size = 0;

  // repeated int32 userMoney = 17;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->usermoney_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _usermoney_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string user = 1;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());
  }

  // string token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string identity = 3;
  if (this->identity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identity());
  }

  // string command = 4;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command());
  }

  // string version = 15;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string extra = 18;
  if (this->extra().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extra());
  }

  // int32 giveup = 5;
  if (this->giveup() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->giveup());
  }

  // int32 allin = 6;
  if (this->allin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->allin());
  }

  // int32 check = 7;
  if (this->check() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->check());
  }

  // int32 callbet = 8;
  if (this->callbet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->callbet());
  }

  // int32 raisebet = 9;
  if (this->raisebet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->raisebet());
  }

  // int32 amount = 10;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->amount());
  }

  // int32 pos = 11;
  if (this->pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pos());
  }

  // int32 type = 12;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 num = 13;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  // int32 status = 14;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // int32 actionNum = 16;
  if (this->actionnum() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actionnum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DealerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Dealer.DealerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DealerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DealerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Dealer.DealerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Dealer.DealerRequest)
    MergeFrom(*source);
  }
}

void DealerRequest::MergeFrom(const DealerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Dealer.DealerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  usermoney_.MergeFrom(from.usermoney_);
  if (from.user().size() > 0) {

    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.identity().size() > 0) {

    identity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identity_);
  }
  if (from.command().size() > 0) {

    command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.extra().size() > 0) {

    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  if (from.giveup() != 0) {
    set_giveup(from.giveup());
  }
  if (from.allin() != 0) {
    set_allin(from.allin());
  }
  if (from.check() != 0) {
    set_check(from.check());
  }
  if (from.callbet() != 0) {
    set_callbet(from.callbet());
  }
  if (from.raisebet() != 0) {
    set_raisebet(from.raisebet());
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.pos() != 0) {
    set_pos(from.pos());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.actionnum() != 0) {
    set_actionnum(from.actionnum());
  }
}

void DealerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Dealer.DealerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DealerRequest::CopyFrom(const DealerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Dealer.DealerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DealerRequest::IsInitialized() const {
  return true;
}

void DealerRequest::Swap(DealerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DealerRequest::InternalSwap(DealerRequest* other) {
  usermoney_.UnsafeArenaSwap(&other->usermoney_);
  user_.Swap(&other->user_);
  token_.Swap(&other->token_);
  identity_.Swap(&other->identity_);
  command_.Swap(&other->command_);
  version_.Swap(&other->version_);
  extra_.Swap(&other->extra_);
  std::swap(giveup_, other->giveup_);
  std::swap(allin_, other->allin_);
  std::swap(check_, other->check_);
  std::swap(callbet_, other->callbet_);
  std::swap(raisebet_, other->raisebet_);
  std::swap(amount_, other->amount_);
  std::swap(pos_, other->pos_);
  std::swap(type_, other->type_);
  std::swap(num_, other->num_);
  std::swap(status_, other->status_);
  std::swap(actionnum_, other->actionnum_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DealerRequest::GetMetadata() const {
  protobuf_dealer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dealer_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DealerRequest

// string user = 1;
void DealerRequest::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DealerRequest::user() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.user)
  return user_.GetNoArena();
}
void DealerRequest::set_user(const ::std::string& value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.user)
}
#if LANG_CXX11
void DealerRequest::set_user(::std::string&& value) {
  
  user_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Dealer.DealerRequest.user)
}
#endif
void DealerRequest::set_user(const char* value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Dealer.DealerRequest.user)
}
void DealerRequest::set_user(const char* value, size_t size) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Dealer.DealerRequest.user)
}
::std::string* DealerRequest::mutable_user() {
  
  // @@protoc_insertion_point(field_mutable:Dealer.DealerRequest.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DealerRequest::release_user() {
  // @@protoc_insertion_point(field_release:Dealer.DealerRequest.user)
  
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DealerRequest::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    
  } else {
    
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:Dealer.DealerRequest.user)
}

// string token = 2;
void DealerRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DealerRequest::token() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.token)
  return token_.GetNoArena();
}
void DealerRequest::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.token)
}
#if LANG_CXX11
void DealerRequest::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Dealer.DealerRequest.token)
}
#endif
void DealerRequest::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Dealer.DealerRequest.token)
}
void DealerRequest::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Dealer.DealerRequest.token)
}
::std::string* DealerRequest::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:Dealer.DealerRequest.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DealerRequest::release_token() {
  // @@protoc_insertion_point(field_release:Dealer.DealerRequest.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DealerRequest::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:Dealer.DealerRequest.token)
}

// string identity = 3;
void DealerRequest::clear_identity() {
  identity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DealerRequest::identity() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.identity)
  return identity_.GetNoArena();
}
void DealerRequest::set_identity(const ::std::string& value) {
  
  identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.identity)
}
#if LANG_CXX11
void DealerRequest::set_identity(::std::string&& value) {
  
  identity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Dealer.DealerRequest.identity)
}
#endif
void DealerRequest::set_identity(const char* value) {
  
  identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Dealer.DealerRequest.identity)
}
void DealerRequest::set_identity(const char* value, size_t size) {
  
  identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Dealer.DealerRequest.identity)
}
::std::string* DealerRequest::mutable_identity() {
  
  // @@protoc_insertion_point(field_mutable:Dealer.DealerRequest.identity)
  return identity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DealerRequest::release_identity() {
  // @@protoc_insertion_point(field_release:Dealer.DealerRequest.identity)
  
  return identity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DealerRequest::set_allocated_identity(::std::string* identity) {
  if (identity != NULL) {
    
  } else {
    
  }
  identity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identity);
  // @@protoc_insertion_point(field_set_allocated:Dealer.DealerRequest.identity)
}

// string command = 4;
void DealerRequest::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DealerRequest::command() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.command)
  return command_.GetNoArena();
}
void DealerRequest::set_command(const ::std::string& value) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.command)
}
#if LANG_CXX11
void DealerRequest::set_command(::std::string&& value) {
  
  command_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Dealer.DealerRequest.command)
}
#endif
void DealerRequest::set_command(const char* value) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Dealer.DealerRequest.command)
}
void DealerRequest::set_command(const char* value, size_t size) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Dealer.DealerRequest.command)
}
::std::string* DealerRequest::mutable_command() {
  
  // @@protoc_insertion_point(field_mutable:Dealer.DealerRequest.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DealerRequest::release_command() {
  // @@protoc_insertion_point(field_release:Dealer.DealerRequest.command)
  
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DealerRequest::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    
  } else {
    
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:Dealer.DealerRequest.command)
}

// int32 giveup = 5;
void DealerRequest::clear_giveup() {
  giveup_ = 0;
}
::google::protobuf::int32 DealerRequest::giveup() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.giveup)
  return giveup_;
}
void DealerRequest::set_giveup(::google::protobuf::int32 value) {
  
  giveup_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.giveup)
}

// int32 allin = 6;
void DealerRequest::clear_allin() {
  allin_ = 0;
}
::google::protobuf::int32 DealerRequest::allin() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.allin)
  return allin_;
}
void DealerRequest::set_allin(::google::protobuf::int32 value) {
  
  allin_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.allin)
}

// int32 check = 7;
void DealerRequest::clear_check() {
  check_ = 0;
}
::google::protobuf::int32 DealerRequest::check() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.check)
  return check_;
}
void DealerRequest::set_check(::google::protobuf::int32 value) {
  
  check_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.check)
}

// int32 callbet = 8;
void DealerRequest::clear_callbet() {
  callbet_ = 0;
}
::google::protobuf::int32 DealerRequest::callbet() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.callbet)
  return callbet_;
}
void DealerRequest::set_callbet(::google::protobuf::int32 value) {
  
  callbet_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.callbet)
}

// int32 raisebet = 9;
void DealerRequest::clear_raisebet() {
  raisebet_ = 0;
}
::google::protobuf::int32 DealerRequest::raisebet() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.raisebet)
  return raisebet_;
}
void DealerRequest::set_raisebet(::google::protobuf::int32 value) {
  
  raisebet_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.raisebet)
}

// int32 amount = 10;
void DealerRequest::clear_amount() {
  amount_ = 0;
}
::google::protobuf::int32 DealerRequest::amount() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.amount)
  return amount_;
}
void DealerRequest::set_amount(::google::protobuf::int32 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.amount)
}

// int32 pos = 11;
void DealerRequest::clear_pos() {
  pos_ = 0;
}
::google::protobuf::int32 DealerRequest::pos() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.pos)
  return pos_;
}
void DealerRequest::set_pos(::google::protobuf::int32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.pos)
}

// int32 type = 12;
void DealerRequest::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 DealerRequest::type() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.type)
  return type_;
}
void DealerRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.type)
}

// int32 num = 13;
void DealerRequest::clear_num() {
  num_ = 0;
}
::google::protobuf::int32 DealerRequest::num() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.num)
  return num_;
}
void DealerRequest::set_num(::google::protobuf::int32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.num)
}

// int32 status = 14;
void DealerRequest::clear_status() {
  status_ = 0;
}
::google::protobuf::int32 DealerRequest::status() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.status)
  return status_;
}
void DealerRequest::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.status)
}

// string version = 15;
void DealerRequest::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DealerRequest::version() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.version)
  return version_.GetNoArena();
}
void DealerRequest::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.version)
}
#if LANG_CXX11
void DealerRequest::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Dealer.DealerRequest.version)
}
#endif
void DealerRequest::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Dealer.DealerRequest.version)
}
void DealerRequest::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Dealer.DealerRequest.version)
}
::std::string* DealerRequest::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:Dealer.DealerRequest.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DealerRequest::release_version() {
  // @@protoc_insertion_point(field_release:Dealer.DealerRequest.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DealerRequest::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:Dealer.DealerRequest.version)
}

// int32 actionNum = 16;
void DealerRequest::clear_actionnum() {
  actionnum_ = 0;
}
::google::protobuf::int32 DealerRequest::actionnum() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.actionNum)
  return actionnum_;
}
void DealerRequest::set_actionnum(::google::protobuf::int32 value) {
  
  actionnum_ = value;
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.actionNum)
}

// repeated int32 userMoney = 17;
int DealerRequest::usermoney_size() const {
  return usermoney_.size();
}
void DealerRequest::clear_usermoney() {
  usermoney_.Clear();
}
::google::protobuf::int32 DealerRequest::usermoney(int index) const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.userMoney)
  return usermoney_.Get(index);
}
void DealerRequest::set_usermoney(int index, ::google::protobuf::int32 value) {
  usermoney_.Set(index, value);
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.userMoney)
}
void DealerRequest::add_usermoney(::google::protobuf::int32 value) {
  usermoney_.Add(value);
  // @@protoc_insertion_point(field_add:Dealer.DealerRequest.userMoney)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DealerRequest::usermoney() const {
  // @@protoc_insertion_point(field_list:Dealer.DealerRequest.userMoney)
  return usermoney_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DealerRequest::mutable_usermoney() {
  // @@protoc_insertion_point(field_mutable_list:Dealer.DealerRequest.userMoney)
  return &usermoney_;
}

// string extra = 18;
void DealerRequest::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DealerRequest::extra() const {
  // @@protoc_insertion_point(field_get:Dealer.DealerRequest.extra)
  return extra_.GetNoArena();
}
void DealerRequest::set_extra(const ::std::string& value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Dealer.DealerRequest.extra)
}
#if LANG_CXX11
void DealerRequest::set_extra(::std::string&& value) {
  
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Dealer.DealerRequest.extra)
}
#endif
void DealerRequest::set_extra(const char* value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Dealer.DealerRequest.extra)
}
void DealerRequest::set_extra(const char* value, size_t size) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Dealer.DealerRequest.extra)
}
::std::string* DealerRequest::mutable_extra() {
  
  // @@protoc_insertion_point(field_mutable:Dealer.DealerRequest.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DealerRequest::release_extra() {
  // @@protoc_insertion_point(field_release:Dealer.DealerRequest.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DealerRequest::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:Dealer.DealerRequest.extra)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Dealer

// @@protoc_insertion_point(global_scope)
